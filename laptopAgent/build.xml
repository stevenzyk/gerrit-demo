<?xml version="1.0" encoding="UTF-8"?>
<project name="Example" default="" basedir=".">

	<property name="build.path" value="build"/>	
	
	<path id="master-classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="build/classes"/>
		<pathelement path="build/test"/>
	</path>

	<target name="init" description="Initialize build directory">
		<mkdir dir="${build.path}"/>
		<mkdir dir="${build.path}/classes"/>		
	</target>

	<target name="compile" description="Compile Java class files">
		<antcall target="init"/>
		<javac srcdir="src/main" destdir="build/classes" debug="true">
			<exclude name="**/test/Test*.java"/>
		</javac>
	</target>
	
	<target name="JUnitCompilation" depends="compile" description="Compile JUnit Java class">
		<mkdir dir="${build.path}/test"/>
		<mkdir dir="build/reports"/>
		<javac srcdir="src/test" destdir="build/test" debug="true">
			<include name="**/*.java"/>
			<classpath refid="master-classpath"/>
		</javac>
	</target>
	
	<target name="Run-JUnit" depends="JUnitCompilation" description="Run tests">
		<junit printsummary="true" fork="yes" haltonfailure="false" failureproperty="tests.failed" showoutput="true">
			<classpath refid="master-classpath"></classpath>
			<batchtest todir="build/reports">
				<fileset dir="src/test">
					<include name="**/*Test.java"/>
				</fileset>
				<formatter type="xml"/>
			</batchtest>
		</junit>
		 <junitreport todir="build">
		 	  <fileset dir="build/reports"/>
		      <report todir="build/test-reports"/>
	    </junitreport>
		<zip destfile="build/reports/buildresults.zip" basedir="build/test-reports" includes="**/*.html" encoding="UTF-8"/>
		<fail if="tests.failed" message="Unit test(s) failed.  See reports!"/>
	</target>
	
	<target name="checkstyle"
    	    description="Generates a report of code convention violations.">
    	<mkdir dir="${build.path}/checkstyle"/>
    	<mkdir dir="${build.path}/checkstyle/reports"/>
		<taskdef resource="checkstyletask.properties"
             classpathref="master-classpath"
             />
  		<checkstyle config="resource/sun_checks.xml"
	              failureProperty="checkstyle.failure"
            	  failOnViolation="false">
    		<formatter type="xml" tofile="${build.path}/checkstyle/reports/checkstyle_report.xml"/>
    		<fileset dir="src/main" includes="**/*.java"/>
  		</checkstyle>
  		<xslt in="${build.path}/checkstyle/reports/checkstyle_report.xml" out="${build.path}/checkstyle/reports/checkstyle_report.html" style="resource/checkstyle-simple.xsl"/>
	</target>
	
	  <target name="emma" depends="init, compile" description="runs the examples" >
	  		<mkdir dir="${build.path}/emma"/>
	  		<mkdir dir="${build.path}/emma/reports"/>
	  		<taskdef resource="emma_ant.properties" classpathref="master-classpath" />
    		<emmajava enabled="true" libclasspathref="master-classpath" 
            	  	classname="com.example.MathUtilTest"
              		classpathref="master-classpath">    			
    				<xml outfile="${build.path}/emma/reports/coverage.xml"/>
    		</emmajava>
  		</target>
	
	<target name="clean" description="Clean all build files">
		<delete dir="build" />
	</target>
	
	<target name="buildProcess">
		<ant target="clean"/>
		<ant target="checkstyle"/>
		<ant target="compile"/>
		<ant target="Run-JUnit"/>
		<ant target="emma"/>
	</target>
	
</project>
